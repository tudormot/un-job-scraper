name: scheduled_scraping
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 0,6,12,18 * * *'
  push:
    branches: [main]

env:
  DB_ARTIFACT_NAME: tinydb_json
  DB_DIR: ~/tiny_db_dir
  CONDA_ENV_FILE: un_scraping_conda_env.yml

jobs:
  run_scraper:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Cache Database
      #   uses: actions/cache@v3
      #   env:
      #     # Increase this value to reset cache
      #     DB_CACHE_NUMBER: 0
      #   with:
      #     path: ~/tiny_db_dir
      #     key:
      #       env.DB_CACHE_NUMBER

      - name: Get tinyDB JSON
        uses: actions/download-artifact@v3
        with:
          name: ${{env.DB_ARTIFACT_NAME}}
          path: ${{env.DB_DIR}}

      - name: Cache conda
        uses: actions/cache@v3
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles(env.CONDA_ENV_FILE) }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles(env.CONDA_ENV_FILE) }}
          restore-keys: |
            ${{ runner.os }}-pip-


      - name: Seturp Conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: un_scraping
          environment-file: ${{env.CONDA_ENV_FILE}}
          auto-activate-base: false
          use-only-tar-bz2: true
      - name: conda_info_display
        run: |
          conda env list
          conda activate un_scraping
          conda info
          conda list

      - name: Run scraper in xvfb
        #should be noted that xvfb and google-chrome are already installed in the default github runner
        run: |
          xvfb-run python . --adblocker_dir adblocker_extension --db_dir $DB_DIR --chrome_version "`google-chrome --version`"

      - name: Upload TinyDB JSON
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.DB_ARTIFACT_NAME}}
          path: ${{env.DB_DIR}}